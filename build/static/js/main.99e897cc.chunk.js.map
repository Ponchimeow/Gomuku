{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Board","this","draw","num","en","ctx","ReactDOM","findDOMNode","getContext","font","textAlign","i","fillText","beginPath","moveTo","lineTo","stroke","j","arc","Math","PI","fillStyle","fill","id","height","width","React","Component","Chess","props","state","chessLogs","winner","chessCanvas","createRef","checkChess","bind","checkWin","handleMove","refs","clearRect","map","log","index","x","y","grid","crg","createRadialGradient","addColorStop","e","xAxis","nativeEvent","offsetX","yAxis","offsetY","round","find","chess","setState","logs","length","squares","Array","last","sum","a","b","check","step","filter","_","ref","onClick","className","classNmae","key","App","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99e897cc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Board extends React.Component {\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  draw() {\n    const num = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19];\n    const en = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S'];\n    const canvas = ReactDOM.findDOMNode(this);\n    const ctx = canvas.getContext('2d');\n    const grid = 30;\n    ctx.font = 'bold 14px Arial';\n    ctx.textAlign = 'left';\n    for (let i = 0; i < 19; i++) {\n      ctx.fillText(num[i], 25 + i * grid, 20);\n      ctx.fillText(num[i], 25 + i * grid, 590);\n    }\n    for (let i = 0; i < 19; i++) {\n      ctx.fillText(en[i], 10, 35 + i * grid);\n      ctx.fillText(en[i], 580, 35 + i * grid);\n    }\n\n    ctx.beginPath();\n    for (let i = 30; i < 20 * grid; i += grid) {\n      ctx.moveTo(i, 30);\n      ctx.lineTo(i, 570);\n      ctx.stroke();\n    }\n    for (let i = 30; i < 20 * grid; i += grid) {\n      ctx.moveTo(30, i);\n      ctx.lineTo(570, i);\n      ctx.stroke();\n    }\n    for (let i = 4; i <= 16; i += 6) {\n      for (let j = 4; j <= 16; j += 6) {\n        ctx.beginPath();\n        ctx.arc(i * grid, j * grid, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = 'black';\n        ctx.fill();\n      }\n    }\n  };\n\n  render() {\n    return (\n      <canvas\n        id='board'\n        height='600'\n        width='600'\n      />\n    );\n  }\n}\n\nclass Chess extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chessLogs: [],\n      winner: '',\n    }\n    this.chessCanvas = React.createRef();\n    this.checkChess = this.checkChess.bind(this);\n    this.checkWin = this.checkWin.bind(this);\n    this.handleMove = this.handleMove.bind(this);\n  }\n\n  componentDidMount() {\n    this.draw();\n  }\n\n  componentDidUpdate() {\n    this.draw();\n  }\n\n  draw() {\n    const { chessLogs } = this.state;\n    const canvas = ReactDOM.findDOMNode(this.refs.chessCanvas);\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, 600, 600);\n    const grid = 30;\n    chessLogs.map((log, index) => {\n      ctx.beginPath();\n      ctx.arc(log.x * grid, log.y * grid, grid / 2 * 0.8, 0, 2 * Math.PI);\n      let crg = ctx.createRadialGradient(log.x * 30, log.y * 30, 13, log.x * 30, log.y * 30, 0);\n      if (index % 2 === 0) {\n        crg.addColorStop(0, '#0A0A0A');\n        crg.addColorStop(1, '#636766')\n      } else {\n        crg.addColorStop(0, '#D1D1D1');\n        crg.addColorStop(1, '#F9F9F9');\n      }\n      ctx.fillStyle = crg;\n      ctx.fill();\n    });\n  };\n\n  checkChess(e) {\n    const { chessLogs, winner } = this.state;\n    if (winner !== '') { return }\n    if (this.checkWin(chessLogs) !== '') {\n      this.setState({\n        winner: this.checkWin(chessLogs),\n      })\n      return;\n    }\n    const xAxis = e.nativeEvent.offsetX;\n    const yAxis = e.nativeEvent.offsetY;\n    // 越界\n    if (xAxis < 20 || xAxis > 580 || yAxis < 20 || yAxis > 580) {\n      return;\n    }\n    const x = Math.round(xAxis / 30)\n    const y = Math.round(yAxis / 30)\n    // 同位\n    if (chessLogs.find(log => log.x === x && log.y === y)) {\n      return;\n    }\n    const chess = [...chessLogs, { x, y }];\n    this.setState({\n      chessLogs: chess,\n    })\n  }\n\n  checkWin(logs) {\n    if (logs.length < 8) {\n      return '';\n    }\n    let squares = Array(19).fill(null).map(() => Array(19).fill(null));\n    logs.map((log, index) => {\n      squares[log.x - 1][log.y - 1] = (index % 2 === 0 ? 'B' : 'W')\n    });\n    const last = logs.length % 2 === 0 ? 'White' : 'Black';\n    const x = logs[logs.length - 1].x;\n    const y = logs[logs.length - 1].y;\n    let sum = 1;\n    let a = x;\n    let b = y;\n    function check() {\n      if (sum < 5) {\n        sum = 1;\n        a = x;\n        b = y;\n        return false;\n      } else {\n        return true;\n      }\n    }\n    // 右\n    if (a < 19 && a > 1 && b < 19 && b > 1) {\n      while (squares[a - 1][b - 1] === squares[a][b - 1]) {\n        sum++;\n        a++;;\n      }\n      a = x;\n      // 左\n      while (squares[a - 1][b - 1] === squares[a - 2][b - 1]) {\n        sum++;\n        a--;\n      }\n      if (check()) {\n        return last;\n      }\n      // 上\n      while (squares[a - 1][b - 1] === squares[a - 1][b]) {\n        sum++;\n        b++;\n      }\n      b = y;\n      // 下\n      while (squares[a - 1][b - 1] === squares[a - 1][b - 2]) {\n        sum++;\n        b--;\n      }\n      if (check()) {\n        return last;\n      }\n      // 右上\n      while (squares[a - 1][b - 1] === squares[a][b]) {\n        sum++;\n        a++;\n        b++;\n      }\n      a = x;\n      b = y;\n      // 左下\n      while (squares[a - 1][b - 1] === squares[a - 2][b - 2]) {\n        sum++;\n        a--;\n        b--;\n      }\n      if (check()) {\n        return last;\n      }\n      // 左上\n      while (squares[a - 1][b - 1] === squares[a - 2][b]) {\n        sum++;\n        a--;\n        b++;\n      }\n      a = x;\n      b = y;\n      // 右下\n      while (squares[a - 1][b - 1] === squares[a][b - 2]) {\n        sum++;\n        a++;\n        b--;\n      }\n      if (check()) {\n        return last;\n      }\n    }\n    return '';\n  }\n\n  handleMove(step) {\n    const { chessLogs, winner } = this.state;\n    if (winner !== '') {\n      this.setState({\n        chessLogs: chessLogs.filter((_, i) => i < step),\n        winner: '',\n      })\n    } else {\n      this.setState({\n        chessLogs: chessLogs.filter((_, i) => i < step),\n      })\n    }\n  }\n\n  render() {\n    const { chessLogs } = this.state;\n    const en = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S'];\n    const winner = this.checkWin(chessLogs);\n    return (\n      <div>\n        <canvas\n          ref='chessCanvas'\n          id='chess'\n          height='600'\n          width='600'\n          onClick={this.checkChess}\n        />\n        <div className='control'>\n          <div className='button__group'>\n            <div className='button__group info'>\n              {winner !== '' ?\n                `Winner: ${winner}` : (`Next: ${(chessLogs.length % 2 === 0) ? 'Black' : 'White'}`)\n              }\n            </div>\n            <div className='history'>\n              <div className='history-btn restart' onClick={() => this.handleMove(0)} >#0 Start</div>\n              <div classNmae='history-list'>\n                {chessLogs.map((log, index) => (\n                  <div className='history-btn history-list__btn' key={index + 1} onClick={() => this.handleMove(index + 1)}>#{index + 1}  {log.x}, {en[log.y - 1]}</div>\n                ))}\n              </div>\n            </div>\n          </div>\n          <div className='tip'>點選退回步數</div>\n        </div>\n      </div >\n    );\n  }\n}\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className='wrapper'>\n        <Board />\n        <Chess />\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}